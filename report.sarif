{"$schema":"https://json.schemastore.org/sarif-2.1.0.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"Infer","version":"v1.1.0","rules":[{"id":"THREAD_SAFETY_VIOLATION","name":"Thread Safety Violation","helpUri":"https://fbinfer.com/docs/all-issue-types#thread_safety_violation","properties":{"problem.severity":"warning"}},{"id":"RESOURCE_LEAK","name":"Resource Leak","helpUri":"https://fbinfer.com/docs/all-issue-types#resource_leak","properties":{"problem.severity":"error"}}]}},"results":[{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 38 is not released after line 38."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/password/recovery/checker/ArchiveUsing7ZipChecker.java"},"region":{"startLine":36,"startColumn":1,"endLine":40,"endColumn":1,"message":{"text":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 38 is not released after line 38."}}}}]},{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 42 is not released after line 42."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/password/recovery/checker/RarUsingRarChecker.java"},"region":{"startLine":40,"startColumn":1,"endLine":44,"endColumn":1,"message":{"text":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 42 is not released after line 42."}}}}]},{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 59 is not released after line 59."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/core/EncoderConvert.java"},"region":{"startLine":41,"startColumn":1,"endLine":61,"endColumn":1,"message":{"text":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 59 is not released after line 59."}}}}]},{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 61 is not released after line 61."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/core/EncoderConvert.java"},"region":{"startLine":41,"startColumn":1,"endLine":63,"endColumn":1,"message":{"text":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 61 is not released after line 61."}}}}]},{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 43 is not released after line 43."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/password/recovery/checker/ArchiveUsingWinRarChecker.java"},"region":{"startLine":41,"startColumn":1,"endLine":45,"endColumn":1,"message":{"text":"resource of type `java.lang.Process` acquired by call to `exec(...)` at line 43 is not released after line 43."}}}}]},{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 90 is not released after line 92.\n**Note**: potential exception at line 91"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/zhconvert/ZHConverterUtils.java"},"region":{"startLine":87,"startColumn":1,"endLine":94,"endColumn":1,"message":{"text":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 90 is not released after line 92.\n**Note**: potential exception at line 91"}}}}]},{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 97 is not released after line 99.\n**Note**: potential exception at line 91"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/zhconvert/ZHConverterUtils.java"},"region":{"startLine":87,"startColumn":1,"endLine":101,"endColumn":1,"message":{"text":"resource of type `java.io.FileOutputStream` acquired by call to `FileOutputStream(...)` at line 97 is not released after line 99.\n**Note**: potential exception at line 91"}}}}]},{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.util.zip.ZipFile` acquired by call to `ZipFile(...)` at line 175 is not released after line 207.\n**Note**: potential exception at line 197"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/reverse/AxmlPrinterPanel.java"},"region":{"startLine":139,"startColumn":1,"endLine":209,"endColumn":1,"message":{"text":"resource of type `java.util.zip.ZipFile` acquired by call to `ZipFile(...)` at line 175 is not released after line 207.\n**Note**: potential exception at line 197"}}}}]},{"ruleId":"RESOURCE_LEAK","level":"error","message":{"text":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 397 is not released after line 397."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/password/recovery/RecoveryPanel.java"},"region":{"startLine":385,"startColumn":1,"endLine":399,"endColumn":1,"message":{"text":"resource of type `java.io.FileInputStream` acquired by call to `FileInputStream(...)` at line 397 is not released after line 397."}}}}]},{"ruleId":"THREAD_SAFETY_VIOLATION","message":{"text":"Read/Write race. Non-private method `BruteForceFuture.get()` indirectly reads without synchronization from `this.result`. Potentially races with write in method `BruteForceFuture.set(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/password/recovery/bruteforce/BruteForceFuture.java"},"region":{"startLine":1,"startColumn":1,"endLine":35,"endColumn":1,"message":{"text":"Read/Write race. Non-private method `BruteForceFuture.get()` indirectly reads without synchronization from `this.result`. Potentially races with write in method `BruteForceFuture.set(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not."}}}}]},{"ruleId":"THREAD_SAFETY_VIOLATION","message":{"text":"Read/Write race. Non-private method `BruteForceFuture.get()` reads without synchronization from `this.result`. Potentially races with write in method `BruteForceFuture.set(...)`.\n Reporting because this access may occur on a background thread."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/password/recovery/bruteforce/BruteForceFuture.java"},"region":{"startLine":1,"startColumn":1,"endLine":77,"endColumn":1,"message":{"text":"Read/Write race. Non-private method `BruteForceFuture.get()` reads without synchronization from `this.result`. Potentially races with write in method `BruteForceFuture.set(...)`.\n Reporting because this access may occur on a background thread."}}}}]},{"ruleId":"THREAD_SAFETY_VIOLATION","message":{"text":"Read/Write race. Non-private method `BruteForceFuture.isDone()` reads without synchronization from `this.result`. Potentially races with write in method `BruteForceFuture.set(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/main/java/edu/jiangxin/apktoolbox/file/password/recovery/bruteforce/BruteForceFuture.java"},"region":{"startLine":1,"startColumn":1,"endLine":85,"endColumn":1,"message":{"text":"Read/Write race. Non-private method `BruteForceFuture.isDone()` reads without synchronization from `this.result`. Potentially races with write in method `BruteForceFuture.set(...)`.\n Reporting because another access to the same memory occurs on a background thread, although this access may not."}}}}]}]}]}